//=^.^=  If with lists
if (head [true, false]) 
   then empty
   else [1, 2]; //=^.^=  []


//=^.^=  If with functions
if ((\x y -> x > y) : 2 : 3) then 22 else 33; //=^.^=  33


//=^.^= If returning functions
//=^.^= Types are matched (function a -> a and int -> int)
fun f1 x = x;
fun f2 x = 2 * x;
(if 1 == 1 then f1 else f2) : 5;   //=^.^=  5
(if false then f1 else f2) : 5;   //=^.^=  10


//=^.^=  If with nested lists
if (false) then [[[1]]] else (concat [[[2]]] [[[3]]]); //=^.^=  [[[2]], [[3]]]


//=^.^=  If with list of function
//=^.^=  Types are matched (list of functions of type bool -> bool)
if ((head [\x -> x, \y -> y && y]) : true) then 4 else 5;  //=^.^=  4

