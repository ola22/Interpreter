//=^.^=  Functions taking lists as arguments/returning lists


fun ret_concat l1 l2 = concat l1 l2;
ret_concat : [1, 2, 3, 4, 5] : [if true then 5 + 6 else 7, 3]; //=^.^= [1,2,3,4,5,11,3]



fun call_third_func_from_end l x =
    if (isEmpty l)
        then -1
        else (
            if (len : (tail l) == 2)
                then (head l) : x
                else call_third_func_from_end : (tail l) : x
        );
def func_list = [\x -> x * 2, \y -> y * 3, \x -> x * 8, \z -> z * 4, \t -> t * 5];
call_third_func_from_end : func_list : 1;     //=^.^=  8
