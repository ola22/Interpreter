My language name is Olol. It's a simple functional language. It provides following features:

	- "typedef" allows user to create recursive algebraic types with pattern matching
	- operators <,>,==,!= are comparison operators
	- simple logical operators: &, ||
	- simple arithmetic operators: +,-,*,/,%
	- with "def" olol allows user to define different variables, lambdas, ifs
	- with "fun" olol allows user to define different functions
	- "if" as usual
	- it provides creating annymous functions with "\x -> exp" clause
	- its "match with" clause provides a posibility to use pattern matching
	  with different datastructures (not done)
	- all instructions and expressions in programm are separated by ;
