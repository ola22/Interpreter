First I plan to create language for 20 points and than probably the one for 25 points.
If I have enough time I would do the one for 30 points too


For 20 points
  + 01 (two types)
  + 02 (arithmetical operations, comparison)
  + 03 (if clause)
  + 04 (functions with multiple arguments, recurrency)
  + 05 (anonymous functions, higher order functions and partial application)
  + 06 (run-time errors)
  Lists:
    07 (with pattern matching)
  + 08 (built-in operations)
  + 09 ("syntax sugar")
  
For 25 points
  + 10 (lists of any type, nested lists and lists of functions)
    11 (simple algebraic types with one level pattern matching)
  + 12 (static identifier binding)
  13 (static typing)

For 30 points
  14 (polimorfic and recurrency algebraic types) ? when enough time
  15 (nested pattern matching, complete test) ? when enough time

Bonus
  16 (polimorphic types with types reconstruction algorithm)



Together: 25 (for the ones with +)

