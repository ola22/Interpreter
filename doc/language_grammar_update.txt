I am not using BNFC convention. Therefore I've created rather informal grammar. Here is quick explanation:
	- all things in "" are reserved instructions, types, ect..
	- (sth)+ means at least one repetition of sth
	- (sth)* means at least 0 repetitions of sth
	- identifier is a string started with small letter
	- Identifier is a string started with a capital letter
	- Integer is any proper integer number




----------------------------------------------------- GRAMMAR -----------------------------------------------------------



Programm := ProgElem+


ProgElem := Typedef ";" | Comment | Exp ";" 
            | "def " identifier "=" Exp     -> for variables, lambdas and  ifs
            | "fun " identifier+ "=" Exp   -> rules used for defining variables/functions


Exp := "True" | "False" | Integer
    | Exp + Exp | Exp - Exp | Exp * Exp | Exp / Exp | Exp % Exp
    | Exp == Exp | Exp != Exp | Exp > Exp | Exp < Exp
    | Exp || Exp | Exp && Exp
    | "(" Exp ")"
    | identifier    -> variables and functions | Identifier  -> constructors names
    | "if " Exp " then " Exp " else " Exp
    | Exp : Exp       -> partial application
    | "\" identifier* "->" Exp     -> rule used for defining anonymous functions
    | "match" Exp "with" ("case" MatchExp "->" Exp)+ "matchend"   -> pattern matching



Comment := "/=^.^=" Char* "=^.^=/" -> multiple-line comments
	| "//=^.^=" Char*          -> single-line comments
