



//=^.^=[(\x y -> x / y), \x -> 2 * x];

(\x y -> x / y) : 2;

fun f a b = a + b;
f;
f : 1;
f : 1: 2;



def łoś = 15 * 2;
fun mućka = \x -> x + 2;
fun id x = x;
id : 2;
id : true; 
//=^.^=  fun alpaczka = if id : true then id : 44 else id : 66;      to bez sensu :<
if id : true then id : 44 else id : 66;
mućka : 3;







/=^.^=
[PEDef "\322o\347" (TFAppl (TFAppl (TData DPrimi 2) (TData DInt 15)) (TData DInt 2)),
PEFunc "mu\263ka" (TFunc "x" (TFAppl (TFAppl (TData DPrimi 2) (TVar "x")) (TData DInt 2))),
PEFunc "alpaczka" (TFunc "b" (TFAppl (TFAppl (TFAppl (TData DPrimi 3) (TVar "b")) (TData DInt 44)) (TData DInt 66))),
PEExpr (TFAppl (TVar "mu\263ka") (TData DInt 3)),
PEDef "lista_ze_zmiennymi3" (TData DList [TVar "mu\263ka",TVar "mu\263ka",TVar "\322o\347"]),
PEExpr (TFAppl (TData DListPrimi 1) (TVar "lista_ze_zmiennymi3"))]


function mnozenie_przez(x) {
  return function(y) {
    return x * y;
  };
}

var iloczyn_5_przez = mnozenie_przez(5);

console.log(iloczyn_5_przez(12)); // 60 
=^.^=/





fun multiply x = (\y -> x * y);

def multiplied_by_5 = multiply : 5;

multiplied_by_5 : 12;








